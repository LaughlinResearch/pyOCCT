/*
This file is part of pyOCCT which provides Python bindings to the OpenCASCADE
geometry kernel.

Copyright (C) 2016-2018  Laughlin Research, LLC
Copyright (C) 2019 Trevor Laughlin and the pyOCCT contributors

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
*/
#include <pyOCCT_Common.hxx>

void bind_OpenGl_MaterialFlag(py::module &);
void bind_OpenGl_FeatureFlag(py::module &);
void bind_OpenGl_StateVariable(py::module &);
void bind_OpenGl_LayerFilter(py::module &);
void bind_OpenGl_ProgramOptions(py::module &);
void bind_OpenGl_GlFunctions(py::module &);
void bind_OpenGl_ArbDbg(py::module &);
void bind_OpenGl_ArbFBO(py::module &);
void bind_OpenGl_ArbFBOBlit(py::module &);
void bind_OpenGl_ArbIns(py::module &);
void bind_OpenGl_ArbSamplerObject(py::module &);
void bind_OpenGl_ArbTBO(py::module &);
void bind_OpenGl_ArbTexBindless(py::module &);
void bind_OpenGl_RenderFilter(py::module &);
void bind_OpenGl_Element(py::module &);
void bind_OpenGl_AspectLine(py::module &);
void bind_OpenGl_TextureSet(py::module &);
void bind_OpenGl_AspectFace(py::module &);
void bind_OpenGl_AspectMarker(py::module &);
void bind_OpenGl_AspectText(py::module &);
void bind_OpenGl_GlCore11Fwd(py::module &);
void bind_OpenGl_GlCore11(py::module &);
void bind_OpenGl_GlCore12(py::module &);
void bind_OpenGl_GlCore12Fwd(py::module &);
void bind_OpenGl_GlCore13Fwd(py::module &);
void bind_OpenGl_GlCore13(py::module &);
void bind_OpenGl_GlCore14(py::module &);
void bind_OpenGl_GlCore14Fwd(py::module &);
void bind_OpenGl_GlCore15(py::module &);
void bind_OpenGl_GlCore15Fwd(py::module &);
void bind_OpenGl_GlCore20(py::module &);
void bind_OpenGl_GlCore20Fwd(py::module &);
void bind_OpenGl_Resource(py::module &);
void bind_OpenGl_Caps(py::module &);
void bind_OpenGl_MapOfHatchStylesAndIds(py::module &);
void bind_OpenGl_LineAttributes(py::module &);
void bind_OpenGl_Vec2i(py::module &);
void bind_OpenGl_Vec3i(py::module &);
void bind_OpenGl_Vec4i(py::module &);
void bind_OpenGl_Vec2b(py::module &);
void bind_OpenGl_Vec3b(py::module &);
void bind_OpenGl_Vec4b(py::module &);
void bind_OpenGl_Vec2u(py::module &);
void bind_OpenGl_Vec3u(py::module &);
void bind_OpenGl_Vec4u(py::module &);
void bind_OpenGl_Vec2ub(py::module &);
void bind_OpenGl_Vec3ub(py::module &);
void bind_OpenGl_Vec4ub(py::module &);
void bind_OpenGl_Vec2(py::module &);
void bind_OpenGl_Vec3(py::module &);
void bind_OpenGl_Vec4(py::module &);
void bind_OpenGl_Vec2d(py::module &);
void bind_OpenGl_Vec3d(py::module &);
void bind_OpenGl_Vec4d(py::module &);
void bind_OpenGl_Mat4(py::module &);
void bind_OpenGl_Mat4d(py::module &);
void bind_OpenGl_Material(py::module &);
void bind_OpenGl_Clipping(py::module &);
void bind_OpenGl_ClippingIterator(py::module &);
void bind_OpenGl_GlCore12(py::module &);
void bind_OpenGl_GlCore12Fwd(py::module &);
void bind_OpenGl_GlCore14(py::module &);
void bind_OpenGl_GlCore14Fwd(py::module &);
void bind_OpenGl_GlCore15(py::module &);
void bind_OpenGl_GlCore15Fwd(py::module &);
void bind_OpenGl_GlCore20(py::module &);
void bind_OpenGl_GlCore20Fwd(py::module &);
void bind_OpenGl_GlCore21(py::module &);
void bind_OpenGl_GlCore21Fwd(py::module &);
void bind_OpenGl_GlCore30(py::module &);
void bind_OpenGl_GlCore30Fwd(py::module &);
void bind_OpenGl_GlCore31Back(py::module &);
void bind_OpenGl_GlCore31(py::module &);
void bind_OpenGl_GlCore32Back(py::module &);
void bind_OpenGl_GlCore32(py::module &);
void bind_OpenGl_GlCore33Back(py::module &);
void bind_OpenGl_GlCore33(py::module &);
void bind_OpenGl_GlCore40Back(py::module &);
void bind_OpenGl_GlCore40(py::module &);
void bind_OpenGl_GlCore41Back(py::module &);
void bind_OpenGl_GlCore41(py::module &);
void bind_OpenGl_GlCore42Back(py::module &);
void bind_OpenGl_GlCore42(py::module &);
void bind_OpenGl_GlCore43Back(py::module &);
void bind_OpenGl_GlCore43(py::module &);
void bind_OpenGl_GlCore44Back(py::module &);
void bind_OpenGl_GlCore44(py::module &);
void bind_OpenGl_Context(py::module &);
void bind_OpenGl_Matrix(py::module &);
void bind_OpenGl_NamedResource(py::module &);
void bind_OpenGl_ShaderObject(py::module &);
void bind_OpenGl_SetterInterface(py::module &);
void bind_OpenGl_ShaderList(py::module &);
void bind_OpenGl_SetterList(py::module &);
void bind_OpenGl_VariableSetterSelector(py::module &);
void bind_OpenGl_ShaderProgram(py::module &);
void bind_OpenGl_VertexBuffer(py::module &);
void bind_OpenGl_IndexBuffer(py::module &);
void bind_OpenGl_PrimitiveArray(py::module &);
void bind_OpenGl_ElementNode(py::module &);
void bind_OpenGl_Group(py::module &);
void bind_OpenGl_CappingAlgo(py::module &);
void bind_OpenGl_CappingAlgoFilter(py::module &);
void bind_OpenGl_Sampler(py::module &);
void bind_OpenGl_TextureFormat(py::module &);
void bind_OpenGl_Texture(py::module &);
void bind_OpenGl_ColorFormats(py::module &);
void bind_OpenGl_FrameBuffer(py::module &);
void bind_OpenGl_TextParam(py::module &);
void bind_OpenGl_TextureBufferArb(py::module &);
void bind_OpenGl_Window(py::module &);
void bind_OpenGl_RaytraceFilter(py::module &);
void bind_OpenGl_Workspace(py::module &);
void bind_OpenGl_BackgroundArray(py::module &);
void bind_OpenGl_MapOfZLayerSettings(py::module &);
void bind_OpenGl_StateCounter(py::module &);
void bind_OpenGl_GraphicDriver(py::module &);
void bind_OpenGl_ListOfStructure(py::module &);
void bind_OpenGl_Structure(py::module &);
void bind_OpenGl_BVHClipPrimitiveSet(py::module &);
void bind_OpenGl_BVHClipPrimitiveTrsfPersSet(py::module &);
void bind_OpenGl_BVHTreeSelector(py::module &);
void bind_OpenGl_CappingPlaneResource(py::module &);
void bind_OpenGl_ExtGS(py::module &);
void bind_OpenGl_Flipper(py::module &);
void bind_OpenGl_Font(py::module &);
void bind_OpenGl_IndexedMapOfStructure(py::module &);
void bind_OpenGl_FrameStats(py::module &);
void bind_OpenGl_TextBuilder(py::module &);
void bind_OpenGl_Text(py::module &);
void bind_OpenGl_FrameStatsPrs(py::module &);
void bind_OpenGl_GlCore21(py::module &);
void bind_OpenGl_GlCore21Fwd(py::module &);
void bind_OpenGl_GlCore30(py::module &);
void bind_OpenGl_GlCore30Fwd(py::module &);
void bind_OpenGl_GlCore31Back(py::module &);
void bind_OpenGl_GlCore31(py::module &);
void bind_OpenGl_GlCore32Back(py::module &);
void bind_OpenGl_GlCore32(py::module &);
void bind_OpenGl_GlCore33Back(py::module &);
void bind_OpenGl_GlCore33(py::module &);
void bind_OpenGl_GlCore40Back(py::module &);
void bind_OpenGl_GlCore40(py::module &);
void bind_OpenGl_GlCore41Back(py::module &);
void bind_OpenGl_GlCore41(py::module &);
void bind_OpenGl_GlCore42Back(py::module &);
void bind_OpenGl_GlCore42(py::module &);
void bind_OpenGl_GlCore43Back(py::module &);
void bind_OpenGl_GlCore43(py::module &);
void bind_OpenGl_GlCore44Back(py::module &);
void bind_OpenGl_GlCore44(py::module &);
void bind_OpenGl_GraduatedTrihedron(py::module &);
void bind_OpenGl_HaltonSampler(py::module &);
void bind_OpenGl_GlobalLayerSettings(py::module &);
void bind_OpenGl_IndexedMapOfStructure(py::module &);
void bind_OpenGl_ArrayOfIndexedMapOfStructure(py::module &);
void bind_OpenGl_Layer(py::module &);
void bind_OpenGl_SequenceOfLayers(py::module &);
void bind_OpenGl_LayerSeqIds(py::module &);
void bind_OpenGl_LayerList(py::module &);
void bind_OpenGl_StateInterface(py::module &);
void bind_OpenGl_ProjectionState(py::module &);
void bind_OpenGl_ModelWorldState(py::module &);
void bind_OpenGl_WorldViewState(py::module &);
void bind_OpenGl_LightSourceState(py::module &);
void bind_OpenGl_ClippingState(py::module &);
void bind_OpenGl_OitState(py::module &);
void bind_OpenGl_MaterialState(py::module &);
void bind_OpenGl_PointSprite(py::module &);
void bind_OpenGl_RaytraceMaterial(py::module &);
void bind_OpenGl_RaytraceLight(py::module &);
void bind_QuadBvhHandle(py::module &);
void bind_OpenGl_BVHTriangulation3f(py::module &);
void bind_OpenGl_TriangleSet(py::module &);
void bind_OpenGl_RaytraceGeometry(py::module &);
void bind_OpenGl_SetOfShaderPrograms(py::module &);
void bind_OpenGl_MapOfShaderPrograms(py::module &);
void bind_OpenGl_ShaderProgramList(py::module &);
void bind_OpenGl_ShaderManager(py::module &);
void bind_OpenGl_StencilTest(py::module &);
void bind_OpenGl_StructureShadow(py::module &);
void bind_OpenGl_TileSampler(py::module &);
void bind_OpenGl_VertexBufferCompat(py::module &);
void bind_OpenGl_View(py::module &);

PYBIND11_MODULE(OpenGl, mod) {

py::module::import("OCCT.Aspect");
py::module::import("OCCT.Standard");
py::module::import("OCCT.Graphic3d");
py::module::import("OCCT.TCollection");
py::module::import("OCCT.NCollection");
py::module::import("OCCT.Quantity");
py::module::import("OCCT.TColStd");
py::module::import("OCCT.Message");
py::module::import("OCCT.gp");
py::module::import("OCCT.Image");
py::module::import("OCCT.Precision");
py::module::import("OCCT.Geom");
py::module::import("OCCT.BVH");
py::module::import("OCCT.Select3D");
py::module::import("OCCT.Font");
py::module::import("OCCT.OSD");
py::module::import("OCCT.Bnd");
py::module::import("OCCT.math");

bind_OpenGl_MaterialFlag(mod);
bind_OpenGl_FeatureFlag(mod);
bind_OpenGl_StateVariable(mod);
bind_OpenGl_LayerFilter(mod);
bind_OpenGl_ProgramOptions(mod);
bind_OpenGl_GlFunctions(mod);
bind_OpenGl_ArbDbg(mod);
bind_OpenGl_ArbFBO(mod);
bind_OpenGl_ArbFBOBlit(mod);
bind_OpenGl_ArbIns(mod);
bind_OpenGl_ArbSamplerObject(mod);
bind_OpenGl_ArbTBO(mod);
bind_OpenGl_ArbTexBindless(mod);
bind_OpenGl_RenderFilter(mod);
bind_OpenGl_Element(mod);
bind_OpenGl_AspectLine(mod);
bind_OpenGl_TextureSet(mod);
bind_OpenGl_AspectFace(mod);
bind_OpenGl_AspectMarker(mod);
bind_OpenGl_AspectText(mod);
bind_OpenGl_GlCore11Fwd(mod);
bind_OpenGl_GlCore11(mod);
bind_OpenGl_GlCore12(mod);
bind_OpenGl_GlCore12Fwd(mod);
bind_OpenGl_GlCore13Fwd(mod);
bind_OpenGl_GlCore13(mod);
bind_OpenGl_GlCore14(mod);
bind_OpenGl_GlCore14Fwd(mod);
bind_OpenGl_GlCore15(mod);
bind_OpenGl_GlCore15Fwd(mod);
bind_OpenGl_GlCore20(mod);
bind_OpenGl_GlCore20Fwd(mod);
bind_OpenGl_Resource(mod);
bind_OpenGl_Caps(mod);
bind_OpenGl_MapOfHatchStylesAndIds(mod);
bind_OpenGl_LineAttributes(mod);
bind_OpenGl_Vec2i(mod);
bind_OpenGl_Vec3i(mod);
bind_OpenGl_Vec4i(mod);
bind_OpenGl_Vec2b(mod);
bind_OpenGl_Vec3b(mod);
bind_OpenGl_Vec4b(mod);
bind_OpenGl_Vec2u(mod);
bind_OpenGl_Vec3u(mod);
bind_OpenGl_Vec4u(mod);
bind_OpenGl_Vec2ub(mod);
bind_OpenGl_Vec3ub(mod);
bind_OpenGl_Vec4ub(mod);
bind_OpenGl_Vec2(mod);
bind_OpenGl_Vec3(mod);
bind_OpenGl_Vec4(mod);
bind_OpenGl_Vec2d(mod);
bind_OpenGl_Vec3d(mod);
bind_OpenGl_Vec4d(mod);
bind_OpenGl_Mat4(mod);
bind_OpenGl_Mat4d(mod);
bind_OpenGl_Material(mod);
bind_OpenGl_Clipping(mod);
bind_OpenGl_ClippingIterator(mod);
bind_OpenGl_GlCore12(mod);
bind_OpenGl_GlCore12Fwd(mod);
bind_OpenGl_GlCore14(mod);
bind_OpenGl_GlCore14Fwd(mod);
bind_OpenGl_GlCore15(mod);
bind_OpenGl_GlCore15Fwd(mod);
bind_OpenGl_GlCore20(mod);
bind_OpenGl_GlCore20Fwd(mod);
bind_OpenGl_GlCore21(mod);
bind_OpenGl_GlCore21Fwd(mod);
bind_OpenGl_GlCore30(mod);
bind_OpenGl_GlCore30Fwd(mod);
bind_OpenGl_GlCore31Back(mod);
bind_OpenGl_GlCore31(mod);
bind_OpenGl_GlCore32Back(mod);
bind_OpenGl_GlCore32(mod);
bind_OpenGl_GlCore33Back(mod);
bind_OpenGl_GlCore33(mod);
bind_OpenGl_GlCore40Back(mod);
bind_OpenGl_GlCore40(mod);
bind_OpenGl_GlCore41Back(mod);
bind_OpenGl_GlCore41(mod);
bind_OpenGl_GlCore42Back(mod);
bind_OpenGl_GlCore42(mod);
bind_OpenGl_GlCore43Back(mod);
bind_OpenGl_GlCore43(mod);
bind_OpenGl_GlCore44Back(mod);
bind_OpenGl_GlCore44(mod);
bind_OpenGl_Context(mod);
bind_OpenGl_Matrix(mod);
bind_OpenGl_NamedResource(mod);
bind_OpenGl_ShaderObject(mod);
bind_OpenGl_SetterInterface(mod);
bind_OpenGl_ShaderList(mod);
bind_OpenGl_SetterList(mod);
bind_OpenGl_VariableSetterSelector(mod);
bind_OpenGl_ShaderProgram(mod);
bind_OpenGl_VertexBuffer(mod);
bind_OpenGl_IndexBuffer(mod);
bind_OpenGl_PrimitiveArray(mod);
bind_OpenGl_ElementNode(mod);
bind_OpenGl_Group(mod);
bind_OpenGl_CappingAlgo(mod);
bind_OpenGl_CappingAlgoFilter(mod);
bind_OpenGl_Sampler(mod);
bind_OpenGl_TextureFormat(mod);
bind_OpenGl_Texture(mod);
bind_OpenGl_ColorFormats(mod);
bind_OpenGl_FrameBuffer(mod);
bind_OpenGl_TextParam(mod);
bind_OpenGl_TextureBufferArb(mod);
bind_OpenGl_Window(mod);
bind_OpenGl_RaytraceFilter(mod);
bind_OpenGl_Workspace(mod);
bind_OpenGl_BackgroundArray(mod);
bind_OpenGl_MapOfZLayerSettings(mod);
bind_OpenGl_StateCounter(mod);
bind_OpenGl_GraphicDriver(mod);
bind_OpenGl_ListOfStructure(mod);
bind_OpenGl_Structure(mod);
bind_OpenGl_BVHClipPrimitiveSet(mod);
bind_OpenGl_BVHClipPrimitiveTrsfPersSet(mod);
bind_OpenGl_BVHTreeSelector(mod);
bind_OpenGl_CappingPlaneResource(mod);
bind_OpenGl_ExtGS(mod);
bind_OpenGl_Flipper(mod);
bind_OpenGl_Font(mod);
bind_OpenGl_IndexedMapOfStructure(mod);
bind_OpenGl_FrameStats(mod);
bind_OpenGl_TextBuilder(mod);
bind_OpenGl_Text(mod);
bind_OpenGl_FrameStatsPrs(mod);
bind_OpenGl_GlCore21(mod);
bind_OpenGl_GlCore21Fwd(mod);
bind_OpenGl_GlCore30(mod);
bind_OpenGl_GlCore30Fwd(mod);
bind_OpenGl_GlCore31Back(mod);
bind_OpenGl_GlCore31(mod);
bind_OpenGl_GlCore32Back(mod);
bind_OpenGl_GlCore32(mod);
bind_OpenGl_GlCore33Back(mod);
bind_OpenGl_GlCore33(mod);
bind_OpenGl_GlCore40Back(mod);
bind_OpenGl_GlCore40(mod);
bind_OpenGl_GlCore41Back(mod);
bind_OpenGl_GlCore41(mod);
bind_OpenGl_GlCore42Back(mod);
bind_OpenGl_GlCore42(mod);
bind_OpenGl_GlCore43Back(mod);
bind_OpenGl_GlCore43(mod);
bind_OpenGl_GlCore44Back(mod);
bind_OpenGl_GlCore44(mod);
bind_OpenGl_GraduatedTrihedron(mod);
bind_OpenGl_HaltonSampler(mod);
bind_OpenGl_GlobalLayerSettings(mod);
bind_OpenGl_IndexedMapOfStructure(mod);
bind_OpenGl_ArrayOfIndexedMapOfStructure(mod);
bind_OpenGl_Layer(mod);
bind_OpenGl_SequenceOfLayers(mod);
bind_OpenGl_LayerSeqIds(mod);
bind_OpenGl_LayerList(mod);
bind_OpenGl_StateInterface(mod);
bind_OpenGl_ProjectionState(mod);
bind_OpenGl_ModelWorldState(mod);
bind_OpenGl_WorldViewState(mod);
bind_OpenGl_LightSourceState(mod);
bind_OpenGl_ClippingState(mod);
bind_OpenGl_OitState(mod);
bind_OpenGl_MaterialState(mod);
bind_OpenGl_PointSprite(mod);
bind_OpenGl_RaytraceMaterial(mod);
bind_OpenGl_RaytraceLight(mod);
bind_QuadBvhHandle(mod);
bind_OpenGl_BVHTriangulation3f(mod);
bind_OpenGl_TriangleSet(mod);
bind_OpenGl_RaytraceGeometry(mod);
bind_OpenGl_SetOfShaderPrograms(mod);
bind_OpenGl_MapOfShaderPrograms(mod);
bind_OpenGl_ShaderProgramList(mod);
bind_OpenGl_ShaderManager(mod);
bind_OpenGl_StencilTest(mod);
bind_OpenGl_StructureShadow(mod);
bind_OpenGl_TileSampler(mod);
bind_OpenGl_VertexBufferCompat(mod);
bind_OpenGl_View(mod);

}
